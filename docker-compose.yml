services:
  awx:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: awx
    restart: unless-stopped
    environment:
      - AWX_VERSION=24.6.0
      - AWX_DB_HOST=awx_postgres
      - AWX_DB_PORT=5432
      - AWX_DB_NAME=awx
      - AWX_DB_USER=awx
      - AWX_DB_PASSWORD=${DB_PASSWORD:-password}
      - AWX_ADMIN_USER=${AWX_ADMIN_USER:-admin}
      - AWX_ADMIN_PASSWORD=${AWX_ADMIN_PASSWORD:-password}
      - PLAYBOOKS_PATH=/ansible/playbooks
      - ANSIBLE_LOG_PATH=/opt/awx/logs/ansible.log
    depends_on:
      awx_postgres:
        condition: service_healthy
    ports:
      - "127.0.0.1:8052:8052"
    networks:
      - awx_network
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - ./utils.sh:/opt/awx/utils.sh
      - ./config.yaml:/opt/awx/config.yaml
      - ./playbooks:/ansible/playbooks
      - awx_data:/opt/awx/data
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8052/api/v2/ping/"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
    env_file:
      - .env.awx
    command: /bin/bash -c "chmod o+w /var/log && /entrypoint.sh"

  awx_postgres:
    image: postgres:14-alpine
    container_name: awx_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=awx
      - POSTGRES_USER=awx
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_MAX_CONNECTIONS=100
      - SHARED_BUFFERS=256MB
    networks:
      - awx_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U awx -d awx"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env.postgres

  redis:
    image: redis:6-alpine
    container_name: awx_redis
    restart: unless-stopped
    networks:
      - awx_network
    volumes:
      - redis_data:/data
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  awx_data:
    driver: local

networks:
  awx_network:
    driver: bridge
